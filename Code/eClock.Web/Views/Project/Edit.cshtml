@model eClock.Web.Models.Project

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Project</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate)
                @Html.ValidationMessageFor(model => model.StartDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate)
                @Html.ValidationMessageFor(model => model.EndDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.State, new SelectList(Enum.GetValues(typeof(eClock.Web.Models.ProjectState))))
                @Html.ValidationMessageFor(model => model.State)
            </div>
        </div>
            
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
<div>
    <h4>Modules</h4>
</div>
        <table class="table">
                <tr>
                    <th colspan="2">
                        Name
                    </th>
                </tr>
                @foreach (var item in Model.Modules)
                {
                    <tr>
                        <td>
                            <input type="text" class="moduleTextBox" value="@item.Name" data-module-id="@item.Id" />
                                @Html.ActionLink("Save", "SaveModule", null, new { @class = "save-module", dataModuleId = @item.Id })
                                @Html.ActionLink("Delete", "DeleteModule",null, new { @class = "delete-module", dataModuleId = @item.Id })
                        </td>
                        @*<td>
                            @Html.ActionLink("Delete", "DeleteModule", new { id = item.Id })
                        </td>*@
                    </tr>
                }
        </table>
<div>
    @Html.ActionLink("Add Module", "CreateModule", null, new { @class = "add-module" })
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
}

    

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $('.add-module').click(function (event) {
        event.preventDefault();
        $.ajax({
            url: "/Project/GetNewModuleRow"
        }).done(function (newModuleRow) {
            $(newModuleRow).insertAfter('table tr:last-child');
            saveButtonHandler();
            deleteButtonHandler();
        });
    });


    var saveButtonHandler = function () {
        $('.save-module').click(function (event) {
            event.preventDefault();
            var moduleId = $(this).attr('dataModuleId');
            var moduleName = $(this).parent('td').children('input').val();
            //var moduleName = $('input[data-module-id = "' + moduleId + '"]').val();
            var moduleProjectId = '@Model.Id';
            $.ajax({
                url: "/Project/SaveModule",
                type: "POST",
                data: {
                    Id: moduleId,
                    Name: moduleName,
                    ProjectId: moduleProjectId
                }
            }).done(function (data) {
                if (moduleId == 0) {
                    $('input .moduleTextBox').data('module-id', data.moduleId);
                }
            });
        });
    };

    var deleteButtonHandler = function () {
        $('.delete-module').click(function (event) {
            event.preventDefault();
            var delButton = $(this);
            var moduleId = $(delButton).attr('dataModuleId');
            if (moduleId == 0) {
                $(delButton).closest('tr').remove();
            }
            else {
                $.ajax({
                    url: "/Project/DeleteModule",
                    type: "POST",
                    data: { moduleId: moduleId }
                }).done(function (deleteModule) {
                    if (deleteModule.Success) {
                        $(delButton).closest('tr').remove();
                    }
                });
            }
        });
    };

    saveButtonHandler();
    deleteButtonHandler();
</script>
}

